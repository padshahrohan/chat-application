plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'war'
	id 'idea'
	id 'java-library'
	id "com.google.protobuf" version "0.9.1"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	grpcVersion = "1.50.0"
	protocVersion = "3.21.7"
}

repositories {
	mavenCentral()
}

dependencies {

	implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	if (JavaVersion.current().isJava9Compatible()) {
		// Workaround for @javax.annotation.Generated
		// see: https://github.com/grpc/grpc-java/issues/3633
		implementation 'jakarta.annotation:jakarta.annotation-api'
	}
	implementation 'net.devh:grpc-server-spring-boot-starter:2.13.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protocVersion}"
	}
	generatedFilesBaseDir = "$projectDir/src/generated"
	clean {
		delete generatedFilesBaseDir
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
